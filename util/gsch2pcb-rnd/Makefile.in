put /local/pcb/CFLAGS cc/cflags
append /local/pcb/CFLAGS [@-I../.. -I@/local/pcb/librnd_prefix@/include/librnd4 -I@/local/pcb/librnd_prefix@/include/librnd4/librnd/src_3rd -I../../src_3rd -I../../src -I../../src_3rd/liblihata @]
append /local/pcb/CFLAGS {-DSCMDIR="\\"$(LIBDIR_INSTALLED)\\""}
append /local/pcb/LDFLAGS cc/ldflags
append /local/pcb/LDFLAGS ?/target/libs/ldl
include [@@/local/pcb/librnd_template@/debug.tmpasm@]

print [@
ROOT=../..
PLUGDIR=../../src_plugins
LIBRND_SHAREDIR=@/local/pcb/librnd_prefix@/share/librnd4

include $(LIBRND_SHAREDIR)/librnd.mak

CFLAGS=@/local/pcb/c89flags@ @/local/pcb/CFLAGS@ @?/local/pcb/librnd_extra_inc@ $(CFLAGS_LIBRND_FUNGW)
LDFLAGS=-lm @?/local/pcb/librnd_extra_ldf@ @/local/pcb/LDFLAGS@ $(LDFLAGS_LIBRND_FUNGW)
LDF_LIBRND=-lrnd-hid -lrnd-core -lrnd-3rd
CC=@cc/cc@
@]

print [@
QPARSE=../../src_3rd/qparse/qparse.o
@]

put /local/pcb/tmpasm/buildin  {../src_plugins/Buildin.tmpasm}
put /local/pcb/tmpasm/plugin   {../src_plugins/Plugin.tmpasm}
put /local/pcb/tmpasm/disable  {../src_plugins/Disable.tmpasm}

put /local/pcb/RULES {}
put /local/pcb/OBJS {}
put /local/pcb/LDFLAGS {}
put /local/pcb/CFLAGS {}
put /local/pcb/buildin_init_code {}
put /local/pcb/buildin_init_extern {}

uniq /local/pcb/OBJS

print [@


FP_OBJS    = @/local/pcb/OBJS@ ../../src/conf_core.o
FP_LDFLAGS = @/local/pcb/LDFLAGS@
FP_CFLAGS  = @/local/pcb/CFLAGS@
OBJS = \
 gsch2pcb.o \
 help.o \
 netlister.o \
 run.o \
 method_import.o

all:
	$(MAKE) revcheck
	$(MAKE) gsch2pcb-rnd$(LIBRND_EXE)

revcheck:
	cd ../../scconfig && ./revtest Rev.stamp < Rev.tab

gsch2pcb-rnd$(LIBRND_EXE): $(OBJS)  $(QPARSE) $(FP_OBJS)
	$(CC) $(OBJS) $(FP_OBJS) $(QPARSE) -o gsch2pcb-rnd$(LIBRND_EXE) $(LDF_LIBRND) $(LDFLAGS) $(FP_LDFLAGS)

gsch2pcb.o: gsch2pcb.c ../../config.h
	$(CC) -c $(CFLAGS) $(FP_CFLAGS) gsch2pcb.c -o gsch2pcb.o

# TODO: this should be the base lib only
# run the Makefile in src for the common objects:
$(FP_OBJS) $(QPARSE):
	cd ../../src && $(MAKE) util_deps

##### module rules begin #####
@/local/pcb/RULES@
##### module rules end #####
@]

# generate explicit rules for .c -> .o
put /local/comp/OBJS /local/pcb/OBJS
include [@@/local/pcb/librnd_template@/compile.tmpasm@]

print [@

gsch2pcb.o: gsch2pcb_rnd_conf_fields.h

gsch2pcb_rnd_conf_fields.h: gsch2pcb_rnd_conf.h
	AWK=@/host/fstools/awk@ $(GENCONF) < gsch2pcb_rnd_conf.h > gsch2pcb_rnd_conf_fields.h

install_all:
	$(SCCBOX) mkdir -p "$(BINDIR)" "$(LIBDIR)"
	$(SCCBOX) $(HOW) "gsch2pcb-rnd$(LIBRND_EXE)" "$(BINDIR)/gsch2pcb-rnd$(LIBRND_EXE)"
	$(SCCBOX) $(HOW) "gnet-gsch2pcb-rnd.scm" "$(LIBDIR)/gnet-gsch2pcb-rnd.scm"

install:
	$(MAKE) install_all HOW="install"

linstall:
	$(MAKE) install_all HOW="linstall -f"

uninstall:
	$(MAKE) install_all HOW="uninstall"

clean:
	$(SCCBOX) rm -f -q gsch2pcb-rnd$(LIBRND_EXE) $(OBJS) gsch2pcb_rnd_conf_fields.h

distclean: clean

include $(ROOT)/Makefile.conf

@]
