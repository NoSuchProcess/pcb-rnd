#!/bin/sh

if test -z "$CONF"
then
	CONF="./bisecter.conf"
fi

if test ! -f "$CONF"
then
	echo "Can't find the config file $CONF; please copy bisect.conf.in to $CONF and edit" >&2
	exit 1
fi

	. $CONF

wlog()
{
	echo "$*"
}

svn_list_externs()
{
	svn --xml stat "$1" | awk '
		BEGIN { q="\"" }
		function strip(s) {
			sub("^[^=]*=" q, "", s)
			sub(q ".*$", "", s)
			return s
		}
		/[<]entry/ { state=1 }
		(state == 1) && /path=\"/ { path=strip($0) }
		(state == 1) && /wc-status/ { state = 2 }
		(state == 2) && /item=\"/ { item=strip($0) }
		/[<]\/entry/ {
			if ((item == "external") && (path != ""))
				print path
			item=""
			path=""
			state = 0
		}
	'
}

svn_get_date()
{
	svn info "$1" | awk '
		/Last Changed Date:/ {
			print $4, $5
		}
	'
}

svn_co()
{
	local rev=$1 dt e
	svn checkout $url@$rev "$tmp/$rev"
	dt=`svn_get_date "$tmp/$rev"`
	for e in `svn_list_externs "$tmp/$rev"`
	do
		svn up $e -r "{$dt}"
	done
}

svn_cleanup()
{
	local rev=$1
	rm -rf "$tmp/$rev"
}

cache_save()
{
	local rev=$1 exebn
	exebn=`basename $exe`

	cp "$tmp/$rev/$exe" "$cache/$exebn.$rev"
	if test ! -z "$cache_strip"
	then
		eval $cache_strip "$cache/$exebn.$rev" $redir
	fi

	if test ! -z "$cache_compress"
	then
		eval $cache_compress "$cache/$exebn.$rev" $redir
	fi
}

cache_build()
{
	local rev=$1 save=$2 redir=">>log.$1 2>&1" exebn

	(echo -n "#########################################"; date) >> log.$1

	wlog "Checkout r$1"
	eval "svn_co $rev $redir"

	wlog "Compile r$1"
	eval "(cd \"$tmp/$rev\" && ./configure $confopts && make) $redir"

	if test "0$save" -gt 0
	then
		exebn=`basename $exe`
		cp "$tmp/$rev/$exe" "./$exebn.$rev"
	fi

	wlog "Cache save r$1"
	cache_save "$rev"

	wlog "Cleanup r$1"
	eval svn_cleanup $rev $redir

	mv log.$1 $cache
	if test ! -z "$cache_compress"
	then
		$cache_compress "$cache/log.$1"
	fi
}

cache_get()
{
	local rev=$1 exebn

	exebn=`basename $exe`

	if test -f "$cache/$exebn.$rev$cache_compsuffix"
	then
		echo "Retrieving $exebn.$rev from cache..."
		cp $cache/$exebn.$rev$cache_compsuffix .
		if test ! -z "$cache_decompress"
		then
			$cache_decompress "$exebn.$rev$cache_compsuffix"
		fi
	else
		cache_build $rev 1
	fi
}

cache_get $1


