# TODO default compiler flags
put /local/pcb/CFLAGS cc/rdynamic
append /local/pcb/CFLAGS cc/cflags
append /local/pcb/CFLAGS cc/fpic
append /local/pcb/CFLAGS {-I. -I.. -I../src_3rd -Iicons -DHAVE_CONFIG_H -g -DNDEBUG}
append /local/pcb/LDFLAGS cc/ldflags
append /local/pcb/LDFLAGS cc/rdynamic
put /local/pcb/DEPCFLAGS {}


# main: objects
put /local/pcb/OBJS [@
	action_helper.o
	action_act.o
	buffer.o
	change.o
	change_act.o
	clip.o
	compat_dl.o
	compat_fs.o
	compat_lrealpath.o
	compat_misc.o
	copy.o
	create.o
	crosshair.o
	data.o
	draw.o
	drill.o
	error.o
	event.o
	file.o
	file_act.o
	find.o
	find_act.o
	flags.o
	free_atexit.o
	funchash.o
	gui_act.o
	heap.o
	hid_actions.o
	hid_attrib.o
	hid_color.o
	hid_draw_helpers.o
	hid_extents.o
	hid_flags.o
	hid_helper.o
	hid_init.o
	hid_nogui.o
	hid_resource.o
	insert.o
	intersect.o
	line.o
	list_arc.o
	list_element.o
	list_line.o
	list_text.o
	list_pad.o
	list_pin.o
	list_poly.o
	list_rat.o
	main.o
	mirror.o
	misc.o
	move.o
	mymem.o
	netlist.o
	object_act.o
	paths.o
	pcb-printf.o
	plugins.o
	plug_footprint.o
	polygon.o
	polygon1.o
	polygon_act.o
	print.o
	rats.o
	rats_act.o
	rats_patch.o
	remove.o
	remove_act.o
	rotate.o
	rtree.o
	rubberband.o
	search.o
	select.o
	select_act.o
	set.o
	strflags.o
	stub_edif.o
	stub_mincut.o
	stub_stroke.o
	stub_vendor.o
	thermal.o
	undo.o
	undo_act.o
	vtonpoint.o
	res_parse.o
	res_lex.o
	parse_y.o
	parse_l.o
	buildin.o
	../src_3rd/genht/hash.o
	../src_3rd/genht/htsp.o
	../src_3rd/genht/htpi.o
	../src_3rd/genvector/gds_char.o
@]

# main: language generator files
put /local/pcb/YACC {res_parse parse_y}
put /local/pcb/LEX  {res_lex parse_l}

# main: action registrations
put /local/pcb/ACTION_REG_SRC  {
	action_act.c buffer.c change_act.c file_act.c find_act.c
	flags.c gui_act.c main.c misc.c move.c netlist.c
	object_act.c plugins.c polygon_act.c rats_act.c rats_patch.c
	remove_act.c select_act.c undo_act.c
}

#---- modules ----#
# extra rules for modules
put /local/pcb/RULES {}
put /local/pcb/CLEANFILES {}
put /local/pcb/CLEANRULES {}
put /local/pcb/EXEDEPS {}
put /local/pcb/all {}
put /local/pcb/buildin_init {}
put /local/pcb/rules/install_ {}
put /local/pcb/rules/install {}
put /local/pcb/rules/linstall {}
put /local/pcb/rules/uninstall {}
put /local/pcb/mod/OBJS {}
put /local/pcb/mod/LDFLAGS {}
put /local/pcb/mod/CFLAGS {}

put /local/pcb/tmpasm/buildin  {../src_plugins/Buildin.tmpasm}
put /local/pcb/tmpasm/plugin   {../src_plugins/Plugin.tmpasm}
put /local/pcb/tmpasm/disable  {../src_plugins/Disable.tmpasm}

include {../src_plugins/autoplace/Plug.tmpasm}
include {../src_plugins/autoroute/Plug.tmpasm}
include {../src_plugins/vendordrill/Plug.tmpasm}
include {../src_plugins/puller/Plug.tmpasm}
include {../src_plugins/import_edif/Plug.tmpasm}
include {../src_plugins/djopt/Plug.tmpasm}
include {../src_plugins/mincut/Plug.tmpasm}
include {../src_plugins/gpmi/Plug.tmpasm}
include {../src_plugins/toporouter/Plug.tmpasm}
include {../src_plugins/oldactions/Plug.tmpasm}
include {../src_plugins/fontmode/Plug.tmpasm}
include {../src_plugins/shand_cmd/Plug.tmpasm}
include {../src_plugins/legacy_func/Plug.tmpasm}
include {../src_plugins/renumber/Plug.tmpasm}
include {../src_plugins/stroke/Plug.tmpasm}
include {../src_plugins/report/Plug.tmpasm}
include {../src_plugins/fp_fs/Plug.tmpasm}
include {../src_plugins/import_sch/Plug.tmpasm}
include {../src_plugins/export_ps/Plug.tmpasm}
include {../src_plugins/export_lpr/Plug.tmpasm}
include {../src_plugins/export_gcode/Plug.tmpasm}
include {../src_plugins/export_nelma/Plug.tmpasm}
include {../src_plugins/export_png/Plug.tmpasm}
include {../src_plugins/export_gerber/Plug.tmpasm}
include {../src_plugins/export_bom/Plug.tmpasm}
include {../src_plugins/hid_batch/Plug.tmpasm}
include {../src_plugins/hid_gtk/Plug.tmpasm}
include {../src_plugins/hid_lesstif/Plug.tmpasm}

append /local/pcb/CFLAGS  /target/libs/sul/glib/cflags
append /local/pcb/LIBS    /target/libs/sul/glib/ldflags

# ---- logic ----

# Clean up variables
put /tmpasm/OFS { }
uniq /local/pcb/OBJS
uniq /local/pcb/CFLAGS
uniq /local/pcb/LDFLAGS
uniq /local/pcb/LIBS
uniq /local/pcb/ACTION_REG_SRC
put /local/pcb/SRCS /local/pcb/OBJS
gsub /local/pcb/SRCS {.o } {.c }

# Makefile, static
print [@
# *** DO NOT EDIT THIS FILE ***
# This file has been generated from Makefile.in by configure
# *** DO NOT EDIT THIS FILE ***

# plugin source
PLUGDIR=../src_plugins

# plugin source install - so that pcb-rnd runs from source properly
PLUGIDIR=plugins

@/local/pcb/TOPVARS@
OBJS=@/local/pcb/OBJS@
SRCS=@/local/pcb/SRCS@
CFLAGS=@/local/pcb/CFLAGS@
LDFLAGS=@/local/pcb/LDFLAGS@
LIBS=@/local/pcb/LIBS@ -lm -ldl
EXEDEPS=@/local/pcb/EXEDEPS@
CLEANFILES=@/local/pcb/CLEANFILES@
CLEANRULES=@/local/pcb/CLEANRULES@
CC=@cc/cc@

all: pcb-rnd @/local/pcb/all@

pcb-rnd: $(OBJS) $(EXEDEPS)
	$(CC) $(LDFLAGS) $(OBJS) -o pcb-rnd $(LIBS)
@]

# explicit rules: .y -> .c
#  do not assume old yacc to work to different file names, do the generation
#  in a separate directory to allow parallel compilation with -j
foreach /local/n in /local/pcb/YACC
print [@
@/local/n@.c @/local/n@.h: @/local/n@.y
	mkdir tmp.@/local/n@.y
	cp @/local/n@.y tmp.@/local/n@.y
	cd tmp.@/local/n@.y && bison -d @/local/n@.y
	mv tmp.@/local/n@.y/@/local/n@.tab.h @/local/n@.h
	mv tmp.@/local/n@.y/@/local/n@.tab.c @/local/n@.c
	-mv tmp.@/local/n@.y/@/local/n@.output @/local/n@.output
	rm -rf tmp.@/local/n@.y
@]
end

# explicit rules: .l -> .c
#  do not assume old lex to work to different file names, do the generation
#  in a separate directory to allow parallel compilation with -j
foreach /local/n in /local/pcb/LEX
print [@
@/local/n@.c: @/local/n@.l
	mkdir tmp.@/local/n@.l
	cp @/local/n@.l tmp.@/local/n@.l
	cd tmp.@/local/n@.l && flex @/local/n@.l
	mv tmp.@/local/n@.l/lex.yy.c @/local/n@.c
	rm -rf tmp.@/local/n@.l
@]
end


print [@
##### module rules begin #####

@/local/pcb/RULES@

##### module rules end #####

pcblib_DATA= \
	default_font \
	default.pcb \
	gpcb-menu.res \
	pcb-menu.res


EXTRA_DIST= \
	check_icon.data \
	default_font \
	default.pcb \
	pcbtest.sh.in

all-local: pcbtest.sh

pcb-menu.h: pcb-menu.res
	echo '/* AUTOMATICALLY GENERATED FROM pcb-menu.res DO NOT EDIT */' > pcb-menu.h
	echo 'const char *pcb_menu_default[] = {' >> pcb-menu.h
	sed 's/\\/\\\\/g; s/"/\\"/g; s/^/"/; s/$$/",/' < pcb-menu.res >> pcb-menu.h
	echo '0};' >> pcb-menu.h

gpcb-menu.h: gpcb-menu.res
	echo '/* AUTOMATICALLY GENERATED FROM gpcb-menu.res DO NOT EDIT */' > gpcb-menu.h
	echo 'const char *gpcb_menu_default[] = {' >> gpcb-menu.h
	sed 's/\\/\\\\/g; s/"/\\"/g; s/^/"/; s/$$/",/' < gpcb-menu.res >> gpcb-menu.h
	echo '0};' >> gpcb-menu.h

generated_lists.h: @/local/pcb/ACTION_REG_SRC@ Makefile
	../scconfig/gen_core_lists.sh @/local/pcb/ACTION_REG_SRC@ > generated_lists.h

FORCE:


DISTCLEANFILES= pcbtest.sh gpcb-menu.h pcb-menu.h \
	core_lists.h \
	gpcb-menu.res \
	pcb-menu.res

clean: $(CLEANRULES)
	-rm pcb-rnd $(OBJS) $(CLEANFILES)

include ../Makefile.conf

install_:
	$(MKDIR) $(BINDIR) $(DATADIR) $(LIBDIR) $(LIBDIR)/plugins
	$(CPC) "`pwd`/pcb-rnd" "$(BINDIR)/pcb-rnd"
	$(CPC) "`pwd`/default.pcb" "$(DATADIR)/default.pcb"
	$(CPC) "`pwd`/default_font" "$(DATADIR)/default_font"
	$(CPC) "`pwd`/gpcb-menu.res" "$(DATADIR)/gpcb-menu.res"
	$(CPC) "`pwd`/pcb-menu.res" "$(DATADIR)/pcb-menu.res"@/local/pcb/rules/install_@

install:
	make install_ CPC="$(CP)"@/local/pcb/rules/install@

linstall:
	make install_ CPC="$(LN)"@/local/pcb/rules/linstall@


uninstall:
	$(RM) $(BINDIR)/pcb-rnd
	$(RM) $(DATADIR)/default.pcb
	$(RM) $(DATADIR)/default_font
	$(RM) $(DATADIR)/gpcb-menu.res
	$(RM) $(DATADIR)/pcb-menu.res@/local/pcb/rules/uninstall@
@]

# generate explicit rules for .c -> .o
put /local/comp/OBJS /local/pcb/OBJS
include {../scconfig/Makefile.comp.inc}

# generate deps
put /local/dep/CFLAGS /local/pcb/CFLAGS
put /local/dep/SRCS /local/pcb/SRCS

gsub /local/pcb/DEPSRCS {.o } {.c }
append /local/dep/SRCS /local/pcb/DEPSRCS
include {../scconfig/Makefile.dep.inc}
