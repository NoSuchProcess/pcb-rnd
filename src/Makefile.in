# TODO default compiler flags
put /local/pcb/CFLAGS [@ @cc/cflags@ @cc/argstd/std_c99@ @]
append /local/pcb/CFLAGS cc/fpic
append /local/pcb/CFLAGS {-I. -I.. -I../src_3rd -I../src_3rd/liblihata -Iicons -DHAVE_CONFIG_H}
append /local/pcb/LDFLAGS cc/ldflags
append /local/pcb/LDFLAGS cc/rdynamic
put /local/pcb/DEPCFLAGS {}
put /tmpasm/OFS { }

include {../scconfig/template/debug.tmpasm}

# main: objects
# These have constructs that are not c89 strictly speaking but are
# effectively c89; typical example is casting a function pointer to a
# data pointer for dlsym().
put /local/pcb/OBJS_C99 [@
	fptr_cast.o
@]

put /local/pcb/OBJS [@
	action_helper.o
	action_act.o
	attrib.o
	board.o
	box.o
	buffer.o
	build_run.o
	change.o
	change_act.o
	conf.o
	conf_act.o
	conf_core.o
	conf_hid.o
	conf_internal.o
	clip.o
	compat_dl.o
	compat_fs.o
	compat_lrealpath.o
	compat_misc.o
	copy.o
	crosshair.o
	data.o
	draw.o
	error.o
	event.o
	font.o
	file_act.o
	find.o
	find_act.o
	flag.o
	flag_str.o
	free_atexit.o
	funchash.o
	gui_act.o
	heap.o
	hid_actions.o
	hid_attrib.o
	hid_cfg.o
	hid_cfg_action.o
	hid_cfg_input.o
	hid_color.o
	hid_draw_helpers.o
	hid_extents.o
	hid_flags.o
	hid_helper.o
	hid_init.o
	hid_nogui.o
	ht_element.o
	insert.o
	intersect.o
	layer.o
	layer_grp.o
	layer_ui.o
	layer_vis.o
	library.o
	list_conf.o
	main.o
	main_act.o
	misc_util.o
	move.o
	netlist.o
	netlist_act.o
	object_act.o
	obj_common.o
	obj_any.o
	obj_arc.o
	obj_arc_list.o
	obj_arc_ui.o
	obj_elem.o
	obj_elem_list.o
	obj_line.o
	obj_line_drcenf.o
	obj_line_list.o
	obj_pad.o
	obj_pad_list.o
	obj_pinvia.o
	obj_pinvia_therm.o
	obj_pinvia_list.o
	obj_poly.o
	obj_poly_list.o
	obj_rat.o
	obj_rat_list.o
	obj_text.o
	obj_text_list.o
	paths.o
	pcb-printf.o
	plugins.o
	plug_import.o
	plug_io.o
	plug_footprint.o
	plug_footprint_act.o
	polygon.o
	polygon1.o
	polygon_act.o
	rats.o
	rats_act.o
	rats_patch.o
	remove.o
	remove_act.o
	rotate.o
	route_style.o
	rtree.o
	search.o
	select.o
	select_act.o
	stub_draw_csect.o
	stub_draw_fab.o
	stub_mincut.o
	stub_stroke.o
	stub_vendor.o
	undo.o
	undo_act.o
	unit.o
	vtlibrary.o
	vtonpoint.o
	vtptr.o
	vtroutestyle.o
	buildin.o
	../src_3rd/liblihata/parser.o
	../src_3rd/liblihata/dom.o
	../src_3rd/liblihata/dom_list.o
	../src_3rd/liblihata/dom_hash.o
	../src_3rd/liblihata/dom_table.o
	../src_3rd/liblihata/lihata.o
	../src_3rd/liblihata/hash_str.o
	../src_3rd/liblihata/tree.o
	../src_3rd/liblihata/tree_list.o
	../src_3rd/liblihata/tree_hash.o
	../src_3rd/liblihata/tree_table.o
	../src_3rd/liblihata/tree_symlink.o
	../src_3rd/liblihata/tree_path.o
	../src_3rd/liblihata/genht/hash.o
	../src_3rd/liblihata/genht/htsp.o
	../src_3rd/liblihata/genht/htsi.o
	../src_3rd/liblihata/genht/htpi.o
	../src_3rd/liblihata/genht/htip.o
	../src_3rd/liblihata/genht/htpp.o
	../src_3rd/liblhtpers/lhtpers.o
	../src_3rd/genvector/gds_char.o
	../src_3rd/genvector/vtp0.o
	../src_3rd/genregex/regex_sei.o
	../src_3rd/genregex/regex_se.o
	../src_3rd/genregex/regex.o
@]

# We do not compile these in the executable but we need rules for these for utils
put /local/pcb/OBJS_UTIL [@
	../src_3rd/genvector/vts0.o
	../src_3rd/qparse/qparse.o
@]

# main: action registrations
put /local/pcb/ACTION_REG_SRC  {
	action_act.c buffer.c change_act.c conf_act.c file_act.c find_act.c
	gui_act.c main_act.c netlist_act.c
	object_act.c plugins.c polygon_act.c plug_footprint_act.c rats_act.c
	rats_patch.c remove_act.c select_act.c undo_act.c
}

#---- modules ----#
# extra rules for modules
put /local/pcb/RULES {}
put /local/pcb/CLEANFILES {}
put /local/pcb/CLEANRULES {}
put /local/pcb/EXEDEPS {}
put /local/pcb/all {}
put /local/pcb/buildin_init {}
put /local/pcb/rules/install_ {}
put /local/pcb/rules/install {}
put /local/pcb/rules/linstall {}
put /local/pcb/rules/uninstall {}
put /local/pcb/mod/OBJS {}
put /local/pcb/mod/OBJS_C99 {}
put /local/pcb/mod/CONF {}
put /local/pcb/mod/LDFLAGS {}
put /local/pcb/mod/CFLAGS {}
put /local/pcb/mod/YACC {}
put /local/pcb/mod/LEX {}

put /local/pcb/tmpasm/buildin         {../src_plugins/Buildin.tmpasm}
put /local/pcb/tmpasm/plugin          {../src_plugins/Plugin.tmpasm}
put /local/pcb/tmpasm/disable         {../src_plugins/Disable.tmpasm}
put /local/pcb/tmpasm/common_enabled  {../src_plugins/Common_enabled.tmpasm}

include {../src_plugins/plugins_ALL.tmpasm}

append /local/pcb/CFLAGS  /target/libs/sul/glib/cflags
append /local/pcb/CFLAGS  /target/libs/sul/dmalloc/cflags
append /local/pcb/LIBS    /target/libs/sul/glib/ldflags
append /local/pcb/LIBS    /target/libs/sul/dmalloc/ldflags

# ---- logic ----


# Clean up variables
uniq /local/pcb/OBJS
uniq /local/pcb/OBJS_C99
uniq /local/pcb/OBJS_UTIL
uniq /local/pcb/CFLAGS
uniq /local/pcb/LDFLAGS
uniq /local/pcb/LIBS
uniq /local/pcb/ACTION_REG_SRC
uniq /local/pcb/EXEDEPS
uniq /local/pcb/CLEANFILES
uniq /local/pcb/DISTCLEANFILES
uniq /local/pcb/CLEANRULES
uniq /local/pcb/all
put /local/pcb/SRCS /local/pcb/OBJS 
append /local/pcb/SRCS ?/local/pcb/OBJS_C99
gsub /local/pcb/SRCS {.o } {.c }

# Makefile, static
print [@
# *** DO NOT EDIT THIS FILE ***
# This file has been generated from Makefile.in by configure
# *** DO NOT EDIT THIS FILE ***

ROOT=..

# plugin source
PLUGDIR=$(ROOT)/src_plugins

# plugin source install - so that pcb-rnd runs from source properly
PLUGIDIR=plugins

# src_3rd dir for the lib_ wrapper plugins
SRC_3RD_DIR=$(ROOT)/src_3rd

@/local/pcb/TOPVARS@
OBJS=@/local/pcb/OBJS@
OBJS_C99=@/local/pcb/OBJS_C99@
OBJS_UTIL=@/local/pcb/OBJS_UTIL@
SRCS=@/local/pcb/SRCS@
CFLAGS=@/local/pcb/CFLAGS@
C89FLAGS=@/local/pcb/c89flags@ @/local/pcb/CFLAGS@
LDFLAGS=@/local/pcb/LDFLAGS@
LIBS=@/local/pcb/LIBS@ -lm @?/target/libs/ldl@
EXEDEPS=@/local/pcb/EXEDEPS@
CLEANFILES=@/local/pcb/CLEANFILES@
CLEANRULES=@/local/pcb/CLEANRULES@
CC=@cc/cc@
CQUOTE=$(ROOT)/scconfig/cquote
SPHASH_PATH=$(ROOT)/src_3rd/sphash
SPHASH=$(SPHASH_PATH)/sphash

all:
	$(MAKE) revcheck
	$(MAKE) all_exe

include $(ROOT)/Makefile.conf

revcheck:
	cd $(ROOT)/scconfig && ./revtest Rev.stamp < Rev.tab

all_exe: pcb-rnd$(EXE) @/local/pcb/all@

pcb-rnd$(EXE): $(OBJS) $(OBJS_C99) $(EXEDEPS)
	$(CC) $(OBJS) $(OBJS_C99) -o pcb-rnd$(EXE) $(LDFLAGS) $(LIBS)


$(SPHASH_PATH)/sphash: $(SPHASH_PATH)/sphash.c
	$(CC) -o pcb-rnd$(EXE) $(SPHASH_PATH)/sphash.c -o $(SPHASH_PATH)/sphash
@]

print [@
##### module rules begin #####

@/local/pcb/RULES@

##### module rules end #####

pcblib_DATA= \
	default_font \
	default.pcb \
	pcb-menu-lesstif.lht \
	pcb-menu-gtk.lht \
	pcb-menu-mkey.lht


EXTRA_DIST= \
	check_icon.data \
	default_font \
	default.pcb \
	pcbtest.sh.in

all-local: pcbtest.sh

generated_lists.h: @/local/pcb/ACTION_REG_SRC@ Makefile
	AWK=@/host/fstools/awk@ $(ROOT)/scconfig/gen_core_lists.sh @/local/pcb/ACTION_REG_SRC@ > generated_lists.h

conf_core_fields.h: conf_core.h
	AWK=@/host/fstools/awk@ $(ROOT)/scconfig/gen_conf.sh $(ROOT)/doc/conf/tree < conf_core.h > conf_core_fields.h

conf_internal.c: pcb-conf.lht
	$(CQUOTE) -n conf_internal < pcb-conf.lht > conf_internal.c

defpcb_internal.c: default.pcb
	$(CQUOTE) -n default_pcb_internal < default.pcb > defpcb_internal.c

# do not make this automatic, most users won't need to regenerate font_internal.c
gen_font:
	$(ROOT)/util/devhelpers/font2c.sh < default_font > font_internal.c

util_deps: $(OBJS) $(OBJS_UTIL)

FORCE:


DISTCLEANFILES = core_lists.h buildin.c compat_inc.h conf_core_fields.h conf_internal.c generated_lists.h @/local/pcb/DISTCLEANFILES@

clean: $(CLEANRULES)
	$(SCCBOX) rm -f -q  pcb-rnd $(OBJS) $(OBJS_C99) $(CLEANFILES)

distclean: FORCE
	$(SCCBOX) rm -f -q  $(DISTCLEANFILES)

install_all:
	$(SCCBOX) mkdir -p "$(BINDIR)" "$(DATADIR)" "$(LIBDIR)" "$(LIBDIR)/plugins"
	$(SCCBOX) $(HOW) "pcb-rnd" "$(BINDIR)/pcb-rnd"
	$(SCCBOX) $(HOW) "default.pcb" "$(DATADIR)/default.pcb"
	$(SCCBOX) $(HOW) "pcb-conf.lht" "$(DATADIR)/pcb-conf.lht"
	$(SCCBOX) $(HOW) "pcb-menu-lesstif.lht" "$(DATADIR)/pcb-menu-lesstif.lht"
	$(SCCBOX) $(HOW) "pcb-menu-gtk.lht" "$(DATADIR)/pcb-menu-gtk.lht"
	$(SCCBOX) $(HOW) "default_font" "$(DATADIR)/default_font"@/local/pcb/rules/install_@

install:
	$(MAKE) install_all HOW="install -f"

linstall:
	$(MAKE) install_all HOW="linstall -f"

uninstall:
	$(MAKE) install_all HOW="uninstall"

@]

# generate explicit rules for .c -> .o
put /local/comp/OBJS /local/pcb/OBJS
put /local/comp/OBJS_C99 ?/local/pcb/OBJS_C99
include {../scconfig/Makefile.comp.inc}

print [@
# for extern utils:@]

put /local/comp/OBJS /local/pcb/OBJS_UTIL
include {../scconfig/Makefile.comp.inc}

# generate deps
put /local/dep/CFLAGS /local/pcb/CFLAGS
put /local/dep/SRCS /local/pcb/SRCS

gsub /local/pcb/DEPSRCS {.o } {.c }
append /local/dep/SRCS /local/pcb/DEPSRCS
include {../scconfig/Makefile.dep.inc}
