# lpr bom gcode gerber nelma png ps

# TODO default compiler flags
put /local/pcb/CFLAGS {-std=gnu99 -I. -I.. -Iicons -DHAVE_CONFIG_H -g -DNDEBUG}

# main: objects
put /local/pcb/OBJS [@
	action.o
	autoplace.o
	autoroute.o
	buffer.o
	change.o
	clip.o
	command.o
	compat.o
	copy.o
	create.o
	crosshair.o
	data.o
	djopt.o
	draw.o
	drill.o
	error.o
	file.o
	find.o
	flags.o
	fontmode.o
	free_atexit.o
	heap.o
	insert.o
	intersect.o
	line.o
	lrealpath.o
	main.o
	mirror.o
	misc.o
	move.o
	mtspace.o
	mymem.o
	netlist.o
	pcb-printf.o
	polygon.o
	polygon1.o
	puller.o
	print.o
	rats.o
	rats_mincut.o
	remove.o
	report.o
	rotate.o
	rtree.o
	rubberband.o
	search.o
	select.o
	set.o
	strflags.o
	thermal.o
	undo.o
	vector.o
	vendor.o
	hid/common/actions.o
	hid/common/flags.o
	hid/common/hidinit.o
	hid/common/hidnogui.o
	hid/common/extents.o
	hid/common/draw_helpers.o
	hid/common/hid_resource.o
	pcb-mincut/graph.o
	pcb-mincut/solve.o
	res_parse.o
	res_lex.o
	edif.o
	parse_y.o
	parse_l.o
@]

# main: language generator files
put /local/pcb/YACC {edif res_parse parse_y}
put /local/pcb/LEX  {res_lex parse_l}

# main: action registrations
put /local/pcb/ACTION_REG_SRC  {
	action.c buffer.c command.c djopt.c flags.c main.c misc.c move.c netlist.c
	puller.c report.c toporouter.c vendor.c
}

#---- modules ----#
# extra rules for modules
put /local/pcb/RULES {}

include {Makefile.in.mod/gtk-gdk}
include {Makefile.in.mod/toporouter}
include {Makefile.in.mod/batch}
include {Makefile.in.mod/bom}
include {Makefile.in.mod/ps}
include {Makefile.in.mod/png}
include {Makefile.in.mod/gerber}
include {Makefile.in.mod/gcode}
include {Makefile.in.mod/nelma}
include {Makefile.in.mod/lpr}

# ---- logic ----

# Clean up variables
put /tmpasm/OFS { }
uniq /local/pcb/OBJS
uniq /local/pcb/CFLAGS
uniq /local/pcb/LDFLAGS
uniq /local/pcb/LIBS
uniq /local/pcb/HIDS
uniq /local/pcb/ACTION_REG_SRC
put /local/pcb/SRCS /local/pcb/OBJS
gsub /local/pcb/SRCS {.o } {.c }

# Makefile, static
print [@
# *** DO NOT EDIT THIS FILE ***
# This file has been generated from Makefile.in by configure
# *** DO NOT EDIT THIS FILE ***

OBJS=@/local/pcb/OBJS@
SRCS=@/local/pcb/SRCS@
CFLAGS=@/local/pcb/CFLAGS@
LDFLAGS=@/local/pcb/LDFLAGS@
LIBS=@/local/pcb/LIBS@ -lm -ldl
HIDLIST=@/local/pcb/HIDS@

all: pcb

pcb: $(OBJS)
	$(CC) $(LDFLAGS) $(OBJS) -o pcb $(LIBS)
@]

# explicit rules: .y -> .c
#  do not assume old yacc to work to different file names, do the generation
#  in a separate directory to allow parallel compilation with -j
foreach /local/n in /local/pcb/YACC
print [@
@/local/n@.c @/local/n@.h: @/local/n@.y
	mkdir tmp.@/local/n@.y
	cp @/local/n@.y tmp.@/local/n@.y
	cd tmp.@/local/n@.y && bison -d @/local/n@.y
	mv tmp.@/local/n@.y/@/local/n@.tab.h @/local/n@.h
	mv tmp.@/local/n@.y/@/local/n@.tab.c @/local/n@.c
	-mv tmp.@/local/n@.y/@/local/n@.output @/local/n@.output
	rm -rf tmp.@/local/n@.y
@]
end

# explicit rules: .l -> .c
#  do not assume old lex to work to different file names, do the generation
#  in a separate directory to allow parallel compilation with -j
foreach /local/n in /local/pcb/LEX
print [@
@/local/n@.c: @/local/n@.l
	mkdir tmp.@/local/n@.l
	cp @/local/n@.l tmp.@/local/n@.l
	cd tmp.@/local/n@.l && flex @/local/n@.l
	mv tmp.@/local/n@.l/lex.yy.c @/local/n@.c
	rm -rf tmp.@/local/n@.l
@]
end


print [@
# module rules
@/local/pcb/RULES@

#--------

pcblib_DATA= \
	default_font \
	gpcb-menu.res \
	pcb-menu.res


EXTRA_DIST= \
	check_icon.data \
	default_font \
	hid/batch/hid.conf \
	hid/bom/hid.conf \
	hid/gcode/hid.conf \
	hid/gerber/hid.conf \
	hid/gtk/gui-icons-misc.data \
	hid/gtk/gui-icons-mode-buttons.data \
	hid/gtk/hid.conf \
	hid/gtk/pcb.rc \
	hid/lesstif/hid.conf \
	hid/lpr/hid.conf \
	hid/png/hid.conf \
	hid/nelma/hid.conf \
	hid/ps/hid.conf \
	gpcb-menu.res.in \
	pcb-menu.res.in \
	pcbtest.sh.in \
	dbus.xml

all-local: pcbtest.sh

pcb-menu.res: pcb-menu.res.in
	echo '/* AUTOMATICALLY GENERATED FROM pcb-menu.res.in DO NOT EDIT */' > pcb-menu.res
	cat pcb-menu.res.in >> pcb-menu.res

pcb-menu.h: pcb-menu.res
	echo '/* AUTOMATICALLY GENERATED FROM pcb-menu.res DO NOT EDIT */' > pcb-menu.h
	echo 'const char *pcb_menu_default[] = {' >> pcb-menu.h
	sed 's/\\/\\\\/g; s/"/\\"/g; s/^/"/; s/$$/",/' < pcb-menu.res >> pcb-menu.h
	echo '0};' >> pcb-menu.h

gpcb-menu.res: gpcb-menu.res.in
	echo '/* AUTOMATICALLY GENERATED FROM gpcb-menu.res.in DO NOT EDIT */' > gpcb-menu.res
	cat gpcb-menu.res.in >> gpcb-menu.res

gpcb-menu.h: gpcb-menu.res
	echo '/* AUTOMATICALLY GENERATED FROM gpcb-menu.res DO NOT EDIT */' > gpcb-menu.h
	echo 'const char *gpcb_menu_default[] = {' >> gpcb-menu.h
	sed 's/\\/\\\\/g; s/"/\\"/g; s/^/"/; s/$$/",/' < gpcb-menu.res >> gpcb-menu.h
	echo '0};' >> gpcb-menu.h

hid/common/hidlist.h : Makefile
	@fstools/mkdir@ hid/common
	true > hid/common/hidlist.h
	for e in ${HIDLIST}; do \
	  echo "HID_DEF($${e})" >> hid/common/hidlist.h; \
	done

action_list.h: @/local/pcb/ACTION_REG_SRC@ Makefile
	Makefile.in.mod/gen_core_lists.sh @/local/pcb/ACTION_REG_SRC@ > action_list.h


hid/gtk/gtk_lists.h: ${LIBGTK_SRCS} Makefile
	$(MKDIR_P) hid/gtk
	true > hid/gtk/gtk_lists.h
	(for f in ${LIBGTK_SRCS} ; do cat $$f ; done) | grep "^REGISTER" > hid/gtk/gtk_lists.h.tmp
	mv hid/gtk/gtk_lists.h.tmp hid/gtk/gtk_lists.h

DISTCLEANFILES= pcbtest.sh gpcb-menu.h pcb-menu.h \
	hid/batch/batch_lists.h \
	hid/common/hidlist.h \
	hid/gtk/gtk_lists.h \
	hid/lesstif/lesstif_lists.h \
	hid/png/png_lists.h \
	hid/gcode/gcode_lists.h \
	hid/nelma/nelma_lists.h \
	hid/ps/ps_lists.h \
	core_lists.h \
	dbus-introspect.h \
	gpcb-menu.res \
	pcb-menu.res

clean:
	-rm pcb $(OBJS)

include ../Makefile.conf

install_:
	$(MKDIR) $(BINDIR) $(DATADIR)
	$(CPC) `pwd`/pcb $(BINDIR)/pcb
	$(CPC) `pwd`/default_font $(DATADIR)/default_font
	$(CPC) `pwd`/gpcb-menu.res $(DATADIR)/gpcb-menu.res
	$(CPC) `pwd`/pcb-menu.res $(DATADIR)/pcb-menu.res

install:
	make install_ CPC="$(CP)"

linstall:
	make install_ CPC="$(LN)"

uninstall:
	$(RM) $(BINDIR)/pcb
	$(RM) $(DATADIR)/gpcb-menu.res
	$(RM) $(DATADIR)/pcb-menu.res

@]

# generate explicit rules for .c -> .o
put /local/comp/OBJS /local/pcb/OBJS
include {../scconfig/Makefile.comp.inc}

# generate deps
put /local/dep/CFLAGS /local/pcb/CFLAGS
put /local/dep/SRCS /local/pcb/SRCS
include {../scconfig/Makefile.dep.inc}
