# TODO default compiler flags
put /local/pcb/CFLAGS cc/cflags
append /local/pcb/CFLAGS cc/fpic
append /local/pcb/CFLAGS ?/local/pcb/cflags_profile
append /local/pcb/CFLAGS {-I. -I.. -I../src_3rd -I../src_3rd/liblihata -Iicons -DHAVE_CONFIG_H}
append /local/pcb/LDFLAGS cc/ldflags
append /local/pcb/LDFLAGS cc/rdynamic
append /local/pcb/LDFLAGS ?/local/pcb/cflags_profile
put /local/pcb/DEPCFLAGS {}
put /local/pcb/OBJS_HIDLIB {}
put /local/pcb/OBJS_HIDLIB_ONLY {}
put /local/pcb/OBJS_C99_HIDLIB_PLG {}
put /local/pcb/OBJS_HIDLIB_PLG {}
put /tmpasm/OFS { }

if ?libs/script/fungw/presents
then
	append /local/pcb/CFLAGS libs/script/fungw/cflags
	append /local/pcb/LDFLAGS libs/script/fungw/ldflags
else
# no system installed fungw means we need to use local genht
	append /local/pcb/OBJS_HIDLIB [@
	../src_3rd/genht/hash.o
	../src_3rd/genht/htsp.o
	../src_3rd/genht/htss.o
	../src_3rd/genht/htsi.o
	../src_3rd/genht/htpi.o
	../src_3rd/genht/htip.o
	../src_3rd/genht/htpp.o
	@]
# local compilation of fungw objects
	append /local/pcb/OBJS_HIDLIB [@
	../src_3rd/libfungw/fungw.o
	../src_3rd/libfungw/fungw_conv.o
	../src_3rd/libfungw/fungw_ptr.o
	../src_3rd/libfungw/fungw_debug.o
	../src_3rd/libfungw/fungw_call.o
	@]
end

# These files are to be generated before make dep is run
put /local/pcb/DEPDEPS { hidlib_conf_fields.h conf_core_fields.h conf_internal.c generated_lists.h defpcb_internal.c buildin.c pcb_menu_default.c }

include {../scconfig/template/debug.tmpasm}

# main: objects
# hidlib will be a library that provides:
#  - the plugin system
#  - the conf system
#  - some basic/generic types like pcb_coord_t
#  - the HID infra, including DAD
# but nothing else; in short the HID part of pcb-rnd for developing a
# GUI program based on pcb-rnd HIDs.

# These have constructs that are not c89 strictly speaking but are
# effectively c89; typical example is casting a function pointer to a
# data pointer for dlsym().
put /local/pcb/OBJS_C99_HIDLIB [@
	fptr_cast.o
@]

append /local/pcb/OBJS_HIDLIB [@
	actions.o
	attrib.o
	color.o
	conf.o
	conf_hid.o
	compat_fs.o
	compat_lrealpath.o
	compat_misc.o
	error.o
	event.o
	file_loaded.o
	funchash.o
	grid.o
	hid_attrib.o
	hid_cfg.o
	hid_cfg_action.o
	hid_cfg_input.o
	hid_color.o
	hid_dlg.o
	hid_dad_tree.o
	hid_dad_spin.o
	hid_dad_unit.o
	hid_init.o
	hid_nogui.o
	hidlib.o
	hidlib_conf.o
	list_conf.o
	misc_util.o
	paths.o
	pcb_bool.o
	pcb-printf.o
	plugins.o
	safe_fs.o
	unit.o
	vtc0.o
	../src_3rd/liblihata/parser.o
	../src_3rd/liblihata/dom.o
	../src_3rd/liblihata/dom_list.o
	../src_3rd/liblihata/dom_hash.o
	../src_3rd/liblihata/dom_table.o
	../src_3rd/liblihata/lihata.o
	../src_3rd/liblihata/hash_str.o
	../src_3rd/liblihata/tree.o
	../src_3rd/liblihata/tree_list.o
	../src_3rd/liblihata/tree_hash.o
	../src_3rd/liblihata/tree_table.o
	../src_3rd/liblihata/tree_symlink.o
	../src_3rd/liblihata/tree_path.o
	../src_3rd/liblhtpers/lhtpers.o
	../src_3rd/genvector/gds_char.o
	../src_3rd/genvector/vtp0.o
	../src_3rd/genvector/vts0.o
	../src_3rd/genvector/vti0.o
	../src_3rd/genvector/vtl0.o
	../src_3rd/genregex/regex_sei.o
	../src_3rd/genregex/regex_se.o
	../src_3rd/genregex/regex.o
@]

# these will be linked only to the hidlib, not to pcb-rnd
append /local/pcb/OBJS_HIDLIB_ONLY [@
	buildin.hidlib.o
@]

put /local/pcb/OBJS_C99 /local/pcb/OBJS_C99_HIDLIB
put /local/pcb/OBJS /local/pcb/OBJS_HIDLIB
append /local/pcb/OBJS [@
	actions_pcb.o
	board.o
	box.o
	brave.o
	buffer.o
	build_run.o
	change.o
	change_act.o
	conf_act.o
	conf_core.o
	conf_internal.o
	crosshair.o
	data.o
	draw.o
	drc.o
	extobj.o
	font.o
	font_act.o
	file_act.o
	find.o
	flag.o
	flag_str.o
	gui_act.o
	heap.o
	hid_cam.o
	hidlib_pcb.o
	ht_subc.o
	idpath.o
	insert.o
	intersect.o
	layer.o
	layer_grp.o
	layer_ui.o
	layer_vis.o
	main.o
	main_act.o
	move.o
	netlist2.o
	netlist_act.o
	object_act.o
	obj_common.o
	obj_arc.o
	obj_arc_list.o
	obj_arc_ui.o
	obj_line.o
	obj_line_drcenf.o
	obj_line_list.o
	obj_pstk.o
	obj_pstk_act.o
	obj_pstk_list.o
	obj_pstk_proto.o
	obj_pinvia_therm.o
	obj_poly.o
	obj_poly_list.o
	obj_rat.o
	obj_rat_list.o
	obj_subc.o
	obj_subc_hash.o
	obj_subc_list.o
	obj_term.o
	obj_text.o
	obj_text_list.o
	operation.o
	pcb_menu_default.o
	pcb_minuid.o
	plug_import.o
	plug_io.o
	plug_footprint.o
	plug_footprint_act.o
	polygon.o
	polygon1.o
	polygon_act.o
	rats_act.o
	rats_patch.o
	remove.o
	remove_act.o
	rotate.o
	route.o
	route_style.o
	rtree.o
	search.o
	select.o
	select_act.o
	stub_draw.o
	stub_stroke.o
	thermal.o
	tool.o
	tool_arc.o
	tool_arrow.o
	tool_buffer.o
	tool_copy.o
	tool_insert.o
	tool_line.o
	tool_lock.o
	tool_move.o
	tool_poly.o
	tool_polyhole.o
	tool_rectangle.o
	tool_remove.o
	tool_rotate.o
	tool_text.o
	tool_thermal.o
	tool_via.o
	undo.o
	undo_act.o
	undo_old.o
	view.o
	vtlibrary.o
	vtonpoint.o
	vtpadstack.o
	vtpadstack_t.o
	vtr0.o
	vtroutestyle.o
	buildin.o
	../src_3rd/qparse/qparse.o
	../src_3rd/libuundo/uundo.o
	../src_3rd/libuundo/uundo_debug.o
@]

put /local/pcb/LIBS_3RD [@
	../src_3rd/puplug/libpuplug.a
	../src_3rd/libminuid/libminuid.a
@]

put /local/pcb/LIBS /local/pcb/LIBS_3RD

# We do not compile these in the executable but we need rules for these for utils
# e.g. ../src_3rd/genht/htsp.o
put /local/pcb/OBJS_UTIL [@
@]

# build a list of header files to be installed with the hidlib
put /local/pcb/HDRS_HIDLIB /local/pcb/OBJS_HIDLIB
uniq /local/pcb/HDRS_HIDLIB
gsub /local/pcb/HDRS_HIDLIB {.o } {.h }

# corner case: some headers are not derived from the objects
sub /local/pcb/HDRS_HIDLIB {hid_dlg.h } {}
append /local/pcb/HDRS_HIDLIB {hid.h }


# main: action registrations
put /local/pcb/ACTION_REG_SRC  {
	buffer.c brave.c change_act.c conf_act.c file_act.c drc.c error.c
	gui_act.c hid_dlg.c hid_nogui.c main_act.c netlist_act.c font_act.c
	object_act.c obj_pstk_act.c polygon_act.c plug_footprint_act.c rats_act.c
	rats_patch.c remove_act.c select_act.c undo_act.c
}

#---- modules ----#
# extra rules for modules
put /local/pcb/RULES {}
put /local/pcb/CLEANFILES {}
put /local/pcb/CLEANRULES {}
put /local/pcb/EXEDEPS {}
put /local/pcb/all {}
put /local/pcb/buildin_init {}
put /local/pcb/rules/install_ {}
put /local/pcb/rules/install {}
put /local/pcb/rules/linstall {}
put /local/pcb/rules/uninstall {}
put /local/pcb/mod/OBJS {}
put /local/pcb/mod/OBJS_C99 {}
put /local/pcb/mod/CONF {}
put /local/pcb/mod/LDFLAGS {}
put /local/pcb/mod/CFLAGS {}
put /local/pcb/mod/YACC {}
put /local/pcb/mod/LEX {}

put /local/pcb/tmpasm/buildin         {../src_plugins/Buildin.tmpasm}
put /local/pcb/tmpasm/plugin          {../src_plugins/Plugin.tmpasm}
put /local/pcb/tmpasm/disable         {../src_plugins/Disable.tmpasm}
put /local/pcb/tmpasm/common_enabled  {../src_plugins/Common_enabled.tmpasm}
put /local/pcb/tmpasm/plugin_sphash   {../scconfig/template/plugin_sphash.tmpasm}
put /local/pcb/tmpasm/plugin_conf     {../scconfig/template/plugin_conf.tmpasm}
put /local/pcb/tmpasm/plugin_intconf  {../scconfig/template/plugin_intconf.tmpasm}

include {../src_plugins/plugins_ALL.tmpasm}

append /local/pcb/CFLAGS  /target/libs/sul/dmalloc/cflags
append /local/pcb/LIBS    /target/libs/sul/dmalloc/ldflags

# Lesstif requires that -lXm is before -lXt or else there is a runtime BadWindow error
order /local/pcb/LDFLAGS {-lXm} {before} {-lXt}

# ---- logic ----


# Clean up variables
uniq /local/pcb/OBJS
uniq /local/pcb/OBJS_C99
uniq /local/pcb/OBJS_HIDLIB
uniq /local/pcb/OBJS_HIDLIB_ONLY
uniq /local/pcb/OBJS_C99_HIDLIB
uniq /local/pcb/OBJS_HIDLIB_PLG
uniq /local/pcb/OBJS_C99_HIDLIB_PLG
uniq /local/pcb/OBJS_UTIL
uniq /local/pcb/CFLAGS
uniq /local/pcb/LDFLAGS
uniq /local/pcb/LIBS
uniq /local/pcb/LIBS_PRE
uniq /local/pcb/LIBS_3RD
uniq /local/pcb/ACTION_REG_SRC
uniq /local/pcb/EXEDEPS
uniq /local/pcb/CLEANFILES
uniq /local/pcb/DISTCLEANFILES
uniq /local/pcb/CLEANRULES
uniq /local/pcb/all
put /local/pcb/SRCS /local/pcb/OBJS 
append /local/pcb/SRCS ?/local/pcb/OBJS_C99
append /local/pcb/SRCS ?/local/pcb/OBJS_HIDLIB
append /local/pcb/SRCS ?/local/pcb/OBJS_HIDLIB_ONLY
gsub /local/pcb/SRCS {.o } {.c }

# Makefile, static
print [@
# *** DO NOT EDIT THIS FILE ***
# This file has been generated from Makefile.in by configure
# *** DO NOT EDIT THIS FILE ***

ROOT=..

# plugin source
PLUGDIR=$(ROOT)/src_plugins

# plugin source install - so that pcb-rnd runs from source properly
PLUGIDIR=plugins

# src_3rd dir for the lib_ wrapper plugins
SRC_3RD_DIR=$(ROOT)/src_3rd

@?/local/pcb/TOPVARS@
OBJS=@/local/pcb/OBJS@
OBJS_C99=@/local/pcb/OBJS_C99@
OBJS_HIDLIB=@/local/pcb/OBJS_HIDLIB@
OBJS_HIDLIB_ONLY=@/local/pcb/OBJS_HIDLIB_ONLY@
OBJS_C99_HIDLIB=@/local/pcb/OBJS_C99_HIDLIB@
OBJS_HIDLIB_PLG=@/local/pcb/OBJS_HIDLIB_PLG@
OBJS_C99_HIDLIB_PLG=@/local/pcb/OBJS_C99_HIDLIB_PLG@
OBJS_UTIL=@/local/pcb/OBJS_UTIL@
SRCS=@/local/pcb/SRCS@
CFLAGS=@?cc/argstd/std_c99@ @/local/pcb/CFLAGS@
C89FLAGS=@/local/pcb/c89flags@ @/local/pcb/CFLAGS@
LDFLAGS=@/local/pcb/LDFLAGS@
LIBS_PRE=@/local/pcb/LIBS_PRE@
LIBS=@/local/pcb/LIBS@ -lm @?/target/libs/ldl@
LIBS_3RD=@/local/pcb/LIBS_3RD@
EXEDEPS=@/local/pcb/EXEDEPS@
CLEANFILES=@/local/pcb/CLEANFILES@
CLEANRULES=@/local/pcb/CLEANRULES@
CC=@cc/cc@
CQUOTE=$(ROOT)/scconfig/cquote
SPHASH_PATH=$(ROOT)/src_3rd/sphash
SPHASH=$(SPHASH_PATH)/sphash
PUPLUG=$(ROOT)/src_3rd/puplug/util/puplug
LIBMINUID_CFLAGS=@cc/cflags@
LIBMINUID_LDFLAGS=@cc/ldflags@
GENLIST_CFLAGS=@cc/cflags@
GENLIST_LDFLAGS=@cc/ldflags@

all:
	$(MAKE) revcheck
	$(MAKE) all_exe

include $(ROOT)/Makefile.conf

revcheck:
	cd $(ROOT)/scconfig && ./revtest Rev.stamp < Rev.tab

all_exe: pcb-rnd$(EXE) @/local/pcb/all@

pcb-rnd$(EXE): $(OBJS) $(OBJS_C99) $(EXEDEPS) $(LIBS_3RD)
	$(CC) $(OBJS) $(OBJS_C99) -o pcb-rnd$(EXE) $(LIBS_PRE) $(LDFLAGS) $(LIBS)

# temporary, for testig
hidlib.a: $(OBJS_HIDLIB) $(OBJS_HIDLIB_ONLY) $(OBJS_C99_HIDLIB) $(OBJS_HIDLIB_PLG) $(OBJS_C99_HIDLIB_PLG) $(EXEDEPS) $(LIBS_3RD) buildin.hidlib.h
	$(AR) rvu hidlib.a $(OBJS_HIDLIB_PLG) $(OBJS_C99_HIDLIB_PLG) $(OBJS_HIDLIB) $(OBJS_HIDLIB_ONLY) $(OBJS_C99_HIDLIB)

$(SPHASH_PATH)/sphash: $(SPHASH_PATH)/sphash.c
	$(CC) -o pcb-rnd$(EXE) $(SPHASH_PATH)/sphash.c -o $(SPHASH_PATH)/sphash

# needed by gsch2pcb-rnd
../src_3rd/genlist/genadlist.o ../src_3rd/genlist/genlistalloc.o:
	cd ../src_3rd/genlist && $(MAKE) GENLIST_CFLAGS="$(GENLIST_CFLAGS)" GENLIST_LDFLAGS="$(GENLIST_LDFLAGS)"

buildin.c: $(PLUGDIR)/.builtin.pups $(PUPLUG)
	cd $(PLUGDIR) && $(PUPLUG) buildin.c "-" < $(PLUGDIR)/.builtin.pups > $(ROOT)/src/buildin.c

buildin.h: $(PLUGDIR)/.builtin.pups $(PUPLUG)
	$(PUPLUG) buildin.h > buildin.h

buildin.hidlib.c: $(PLUGDIR)/.builtin.hidlib.pups $(PUPLUG)
	cd $(PLUGDIR) && $(PUPLUG) buildin.c "-" < $(PLUGDIR)/.builtin.hidlib.pups > $(ROOT)/src/buildin.hidlib.c

buildin.hidlib.h: $(PLUGDIR)/.builtin.hidlib.pups $(PUPLUG)
	$(PUPLUG) buildin.h > buildin.hidlib.h

$(PUPLUG):
	cd ../src_3rd/puplug && make

../src_3rd/libminuid/libminuid.a: ../src_3rd/libminuid/libminuid.c ../src_3rd/libminuid/libminuid.h
	cd  ../src_3rd/libminuid && $(MAKE) libminuid.a LIBMINUID_CFLAGS="$(LIBMINUID_CFLAGS)" LIBMINUID_LDFLAGS="$(LIBMINUID_LDFLAGS)"

@]

print [@
##### module rules begin #####

@/local/pcb/RULES@

##### module rules end #####

### default menu embed
pcb_menu_default.c: pcb-menu-default.lht $(CQUOTE)
	$(CQUOTE) -n pcb_hidlib_default_embedded_menu <pcb-menu-default.lht > pcb_menu_default.c

pcblib_DATA= \
	default_font \
	default2.lht \
	default4.lht \
	pcb-menu-default.lht

EXTRA_DIST= \
	default_font \
	default2.lht \
	default4.lht \
	pcbtest.sh.in

all-local: pcbtest.sh

generated_lists.h: @/local/pcb/ACTION_REG_SRC@ Makefile
	AWK=@/host/fstools/awk@ $(ROOT)/scconfig/gen_core_lists.sh @/local/pcb/ACTION_REG_SRC@ > generated_lists.h

conf_core_fields.h: conf_core.h $(ROOT)/doc/conf/tree/rc.html
	AWK=@/host/fstools/awk@ $(ROOT)/scconfig/gen_conf.sh  < conf_core.h > conf_core_fields.h

hidlib_conf_fields.h: hidlib_conf.h $(ROOT)/doc/conf/tree/rc.html
	AWK=@/host/fstools/awk@ $(ROOT)/scconfig/gen_conf.sh < hidlib_conf.h > hidlib_conf_fields.h

$(ROOT)/doc/conf/tree/rc.html: hidlib_conf.h conf_core.h
	cat conf_core.h hidlib_conf.h | AWK=@/host/fstools/awk@ $(ROOT)/scconfig/gen_conf.sh $(ROOT)/doc/conf/tree > /dev/null

conf_internal.c: pcb-conf.lht $(CQUOTE)
	$(CQUOTE) -n conf_internal < pcb-conf.lht > conf_internal.c

defpcb_internal.c: default4.lht
	$(CQUOTE) -n default_pcb_internal < default4.lht > defpcb_internal.c

# do not make this automatic, most users won't need to regenerate font_internal.c
gen_font:
	$(ROOT)/util/devhelpers/font2c.sh < default_font > font_internal.c

util_deps: $(OBJS) $(OBJS_UTIL) ../src_3rd/genlist/genadlist.o ../src_3rd/genlist/genlistalloc.o

FORCE:


DISTCLEANFILES = Makefile.depgen core_lists.h buildin.c compat_inc.h hidlib_conf_fields.h conf_core_fields.h conf_internal.c generated_lists.h defpcb_internal.c pcb_menu_default.c ../src_plugins/.builtin.pups @/local/pcb/DISTCLEANFILES@

clean: $(CLEANRULES)
	$(SCCBOX) rm -f -q  pcb-rnd $(OBJS) $(OBJS_C99) $(CLEANFILES)

distclean: FORCE
	$(SCCBOX) rm -f -q  $(DISTCLEANFILES)

install_pcbrnd:
	$(SCCBOX) mkdir -p "$(BINDIR)" "$(DATADIR)" "$(LIBDIR)" "$(LIBDIR)/plugins"
	$(SCCBOX) $(HOW) "pcb-rnd" "$(BINDIR)/pcb-rnd"
	$(SCCBOX) $(HOW) "default2.lht" "$(DATADIR)/default2.lht"
	$(SCCBOX) $(HOW) "default4.lht" "$(DATADIR)/default4.lht"
	$(SCCBOX) $(HOW) "pcb-conf.lht" "$(DATADIR)/pcb-conf.lht"
	$(SCCBOX) $(HOW) "pcb-menu-default.lht" "$(DATADIR)/pcb-menu-default.lht"
	$(SCCBOX) $(HOW) "default_font" "$(DATADIR)/default_font"@/local/pcb/rules/install_@

install_hidlib:
	$(SCCBOX) mkdir -p "$(HL_LIBDIR)" "$(HL_INCDIR)/core" "$(HL_INCDIR)/src_3rd/liblihata" "$(HL_INCDIR)/src_3rd/puplug" "$(HL_INCDIR)/src_3rd/fungw" "$(HL_INCDIR)/src_3rd/genvector" "$(HL_INCDIR)/src_3rd/genregex"
	$(SCCBOX) $(HOW) "hidlib.a" "$(HL_LIBDIR)/hidlib.a"
@]

# dynamic part of install_pcbrnd: hidlib headers
foreach /local/h in /local/pcb/HDRS_HIDLIB
	put /local/hd /local/h
	switch /local/h
		case {^../}
			sub /local/hd {^[.][.]/} {}
			end
		default
			sub /local/hd {^} {core/}
			end
	end
	print [@	$(SCCBOX) $(HOW) "@/local/h@" "$(HL_INCDIR)/@/local/hd@"@] {\n}
end

print [@

install:
	$(MAKE) install_pcbrnd HOW="install -f"
#	$(MAKE) install_hidlib HOW="install -f"

linstall:
	$(MAKE) install_pcbrnd HOW="linstall -f"
#	$(MAKE) install_hidlib HOW="linstall -f"

uninstall:
	$(MAKE) install_pcbrnd HOW="uninstall"
#	$(MAKE) install_hidlib HOW="uninstall"

map_plugins:
	cd ../src_plugins && ./map_plugins.sh

@]

# generate explicit rules for .c -> .o
put /local/comp/OBJS /local/pcb/OBJS
put /local/comp/OBJS_C99 ?/local/pcb/OBJS_C99
include {../scconfig/template/compile.tmpasm}

print [@
# for extern utils:@]

put /local/comp/OBJS /local/pcb/OBJS_UTIL
include {../scconfig/template/compile.tmpasm}

# generate deps
put /local/dep/CFLAGS /local/pcb/CFLAGS
put /local/dep/SRCS /local/pcb/SRCS

gsub /local/pcb/DEPSRCS {.o } {.c }
append /local/dep/SRCS /local/pcb/DEPSRCS
include {../scconfig/template/cdep.tmpasm}

redir {../src_plugins/.builtin.pups}
print [@# Autogenerated by ./configure - do NOT edit - contains the list of buildins
@?/local/pcb/buildin_pups@
@]

redir {../src_plugins/.builtin.hidlib.pups}
print [@# Autogenerated by ./configure - do NOT edit - contains the list of buildins for the hidlib
@?/local/pcb/buildin_hidlib_pups@
@]

