li:pcb-rnd-conf-v1 {
	ha:overwrite {
		ha:editor {
			grid_unit = mil
			grid = 25 mil
			ha:increments_mm {
				grid=0.1mm
				grid_min=0.01mm
				grid_max=1mm
				size=0.2mm
				size_min=0.01mm
				size_max=0.5mm
				line=0.1mm
				line_min=0.005mm
				line_max=9.5mm
				clear=0.05mm
				clear_min=0.005mm
				clear_max=0.5mm
			}
			ha:increments_mil {
				grid=5 mil
				grid_min=1 mil
				grid_max=25 mil
				size=10 mil
				size_min = 1 mil
				size_max = 10 mil
				line=5 mil
				line_min = 0.5 mil
				line_max = 10 mil
				clear=2 mil
				clear_min = 0.5 mil
				clear_max = 10 mil
			}
			zoom = 1
			mode = 1
			buffer_number = 0
			clear_line = 1
			clear_polypoly = 0
			full_poly = 0
			unique_names = 0
			marker_snaps = 1
			snap_pin = 1
			snap_offgrid_line = 1
			highlight_on_point = 0
			show_solder_side = 0
			save_last_command = 0
			save_in_tmp = 0
			draw_grid = 1
			all_direction_lines = 0
			line_refraction = 1
			rubber_band_mode = 0
			rubber_band_keep_midlinedir = 0
			swap_start_direction = 0
			show_drc = 0
			auto_drc = 0
			show_number = 0
			orthogonal_moves = 0
			reset_after_element = 1
			auto_place = 0
			lock_names = 0
			only_names = 0
			thin_draw = 0
			thin_draw_poly = 0
			wireframe_draw = 0
			local_ref = 0
			check_planes = 0
			hide_names = 0
			description = 0
			name_on_pcb = 1
			enable_stroke = 0
			live_routing = 0
			beep_when_finished = 0
			click_time = 200
			auto_via = 1
			ha:view {
				flip_x = 0
				flip_y = 0
			}
			ha:selection {
				disable_negative = 0
				symmetric_negative = 0
			}
			undo_warning_size = 1024
			fullscreen = 0
			move_linepoint_uses_route = 1
		} # editor

		ha:rc {
			verbose = 0
			quiet = 0
			backup_interval = 60
			brave = {}
#			font_command = {}
#			file_command = {}
#			file_path = {}
			library_shell = {}

			emergency_name = {PCB.%ld.save}
			emergency_format = {lihata}
			backup_name = {PCB.%P.backup}
			backup_format = {lihata}

			li:library_search_paths = {
				?../pcblib
				?~/pcblib/
				$(rc.path.share)/pcblib
			}

			keep_save_backups = false
			save_command = {}

			li:default_font_file = {
				{./default_font}
				{$(rc.path.share)/default_font}
			}
			li:default_pcb_file = {
				{./default4.lht}
				{$(rc.path.share)/default4.lht}
			}

#			script_filename = {}
#			action_string = {}
#			rat_path = {}
#			rat_command = {}
			li:preferred_gui = { gtk2_gl; gtk2_gdk; lesstif }
			save_final_fallback_fmt = lihata
			save_fp_fmt = lihata
		} # rc

		ha:design {
#			via_thickness = 0
#			via_drilling_hole  = 0
#			line_thickness = 0
#			clearance = 0
#			max_width = 0
#			max_height = 0
#			alignment_distance = 0
#			bloat = 0
#			shrink = 0
#			min_wid = 0
#			min_slk = 0
#			min_drill = 0
#			min_ring = 0
			text_scale = 100
			text_font_id = 0
#			poly_isle_area = 0
#			li:default_layer_name = {layername1; layername2}
#			background_image = {}
#			fab_author = {}
			groups = {}
			routes = {}
			paste_adjust = 0
		} # design

		ha:appearance {
			rat_thickness = 0.25 mm
			mark_size = 50 mil
			layer_alpha = 0.7
			drill_alpha = 0.85

			ha:loglevels {
				debug_tag      = {}
				debug_popup    = false
				info_tag       = {}
				info_popup     = false
				warning_tag    = {<B>}
				warning_popup  = true
				error_tag      = {<R>}
				error_popup    = true
			}
			ha:color {
				black = {#000000}
				white = {#ffffff}
				background = {#e5e5e5}
				crosshair = {#ff0000}
				cross = {#cdcd00}
				via = {#7f7f7f}
				via_selected = {#00ffff}
				pin = {#4d4d4d}
				pin_selected = {#00ffff}
				pin_name = {#ff0000}
				element = {#000000}
				element_nonetlist = {#777777}
				subc = {#CC0000}
				subc_nonetlist = {#551111}
				subc_selected = {#00ffff}
				padstackmark = {#CC0000}
				rat = {#b8860b}
				invisible_objects = {#cccccc}
				invisible_mark = {#cccccc}
				element_selected = {#00ffff}
				rat_selected = {#00ffff}
				connected = {#00ff00}
				off_limit = {#cccccc}
				grid = {#ff0000}
				li:layer = {
					{#8b2323}; {#3a5fcd}; {#104e8b}; {#cd3700}; {#548b54};
					{#8b7355}; {#00868b}; {#228b22}; {#8b2323}; {#3a5fcd};
					{#104e8b}; {#cd3700}; {#548b54}; {#8b7355}; {#00868b};
					{#228b22};
					{#8b2323}; {#3a5fcd}; {#104e8b}; {#cd3700}; {#548b54};
					{#8b7355}; {#00868b}; {#228b22}; {#8b2323}; {#3a5fcd};
					{#104e8b}; {#cd3700}; {#548b54}; {#8b7355}; {#00868b};
					{#228b22};
					{#8b2323}; {#3a5fcd}; {#104e8b}; {#cd3700}; {#548b54};
					{#8b7355};
				}
				li:layer_selected = {
					{#00ffff}; {#00ffff}; {#00ffff}; {#00ffff}; {#00ffff};
					{#00ffff}; {#00ffff}; {#00ffff}; {#00ffff}; {#00ffff};
					{#00ffff}; {#00ffff}; {#00ffff}; {#00ffff}; {#00ffff};
					{#00ffff};
					{#00ffff}; {#00ffff}; {#00ffff}; {#00ffff}; {#00ffff};
					{#00ffff}; {#00ffff}; {#00ffff}; {#00ffff}; {#00ffff};
					{#00ffff}; {#00ffff}; {#00ffff}; {#00ffff}; {#00ffff};
					{#00ffff};
					{#00ffff}; {#00ffff}; {#00ffff}; {#00ffff}; {#00ffff};
					{#00ffff};
				}
				warn = {#ff8000}
				mask = {#ff0000}
				paste = {#cd00cd}
			}
			ha:pinout {
#				name_length = 0
#				zoom = 0
				offset_x = 25400
				offset_y = 25400
				text_offset_x = 0.1 mm
				text_offset_y = 0.1 mm
			}
			ha:padstack {
				cross_thick = 1
				cross_size = 0.1 mm
			}
			ha:messages {
#				char_per_line = 0
			}
#			ha:misc {
#				volume = 0
#			} misc;
		} # appearance;

		ha:plugins {
			ha:io_lihata {
				aux_pcb_pattern = {%D.%B.lht.pcb}
			}
			ha:mincut {
				enable = 1
			}
			ha:djopt {
				auto_only = 1
			}
			ha:vendor {
				enable = 0
			}
			ha:diag {
				auto_integrity = 0
			}
			ha:import_sch {
				gnetlist_program = gnetlist
				make_program = make
				verbose = false
			}
			ha:import_mentor_sch {
				li:map_search_paths = {
					{./mentor_parts.map}
					{$(rc.path.share)/mentor_parts.map}
				}
			}
			ha:hid_gtk {
				compact_horizontal = 1
				compact_vertical = 1
				use_command_window = 0
				history_size = 16
				ha:local_grid {
					enable = 0
					radius = 16
				}
				ha:global_grid {
					sparse = 0
					min_dist_px = 4
				}
			}
			ha:report {
				columns = 8
			}
			ha:fp_wget {
				auto_update_gedasymbols = 0
				auto_update_edakrill = 0
			}
		} # plugins

		ha:utils {
			ha:gsch2pcb-rnd {
				remove_unfound_elements = 1
				quiet_mode = 0
				verbose = 0
			}
		} # utils
	} # main
} # root

