UNGLIB:
	- macro.h *_LOOP: add void n to see if anyone used the counter
	- find.c: check InitLayoutLookup - why do we build another cache? -> genvector!
	- test transition (after glib removal is finished so that valgrind works reasonably well again):
		- test autorouter
		- test exporters
		- test gpmi search
		- place 2 arcs, select first, can't move to left edge (bbox or rtree?)
		- can't click into a text and get it selected (rtree?)?!
		- closing the shift+D pin dialog double frees()?
	- get rid of lists.h


BUGS
- gpmi (and other buildings/plugins) not showing up in the about box


CLEANUP #3
- scconfig: detect libstroke
- libstroke: zoom
- cleanup resources:
	- better tree structs with less hidden properties (minor change in the res format: always require key=val pairs)
	- gtk, lesstif: reorganize the code so that:
		- menus are always created using a path (ghid_main_menu_real_add_resource)
		- res->menu should be a common code
	- dynamic menus for plugins
	- gpmi:
		- hid: hid_destroy (pair of hid_create)
		- cleanup on unload: remove menus
- check whether local copy of gts is needed, bisect when toporouter broke 



FEATURES
- UI: trace length calculation {small}
- UI: be able to manually change text line width {small}
- CORE: clear poly should be a per layer flag (on each objects) {?}
- CORE: inverse text {medium}
- BUILD: menuconfig and a config file for scconfig
- split line segment into two (insert line point in the middle)

Low prio:
- display net names on pins, vias (and maybe tracks?) when zoomed in enough
- DRC should warn for thin poly hair
- prev grid size, next grid size
- rotate shaped vias don't rotate the shape (is via rotated at all?)
- new examples
	- blinking led with parametric footprints
	- example of nonetlist: 1206 jumpers and logos
- decide what to do with old doc - texi doesn't seem to work at all
- rethink/rewrite the action/change infrastructure - too many void *ptr1
  pointers, too many code duplication
- double sided board, poly on both layers; grab existing lines on one layer and
  move then around. If all layers are visible, redraw of the far side layer
  is slow and causes flickering elements from that layer until the front is
  redrawn. Maybe we should have less flushes?
- gpmi:
	- dialog: attribute dialog: mini parser from text
	- fix debug draw in the gtk hid
	- ACTE_action(): coords should not be int but Coord
	- get timers to work
- win32 port {large}
	- clean up central Makefile.in rules:
		- remove cat, sed, grep where possible, use scconfig instead
