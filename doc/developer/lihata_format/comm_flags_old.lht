ha:lht_tree_doc { ha:comm {

# these obsolete flags are only relevant in compatibility mode;
# they are not generated by the flag dump but they will not change
# thus this file is hand-written

	ha:flags_element {
		hide=1
		desc={flag bits of an element}
		type=ha
		dot_group=1
		li:children {
			ha:found { valtype=flag; desc={If set, this object has been found by FindConnection()}}
			ha:selected { valtype=flag; desc={Set when the object is selected.}}
			ha:auto { valtype=flag; desc={For lines and vias, indicates that these were created by the autorouter.}}
			ha:drc { valtype=flag; desc={Set for objects that fail DRC: flag like FOUND flag for DRC checking.}}
			ha:lock { valtype=flag; desc={Set for locked objects.}}
			ha:nonetlist { valtype=flag; desc={subcircuit is not on the netlist and should not interfere with the netlist }}
			ha:termname { valtype=flag; desc={when set the names of pins are shown.}}
			ha:floater { valtype=flag; desc={subc part can be moved after subc placing}}
			ha:onsolder { valtype=flag; desc={element is placed on the solder side}}
		}
	}
	ha:flags_pinvia {
		hide=1
		desc={flag bits of a pin or via}
		type=ha
		dot_group=1
		li:children {
			ha:found { valtype=flag; desc={If set, this object has been found by FindConnection()}}
			ha:hole { valtype=flag; desc={For pins and vias, this flag means that the pin or via is a hole without a copper annulus.}}
			ha:clearline { valtype=flag; desc={For lines and arcs, the line/arc will clear polygons instead of connecting to them.}}
			ha:selected { valtype=flag; desc={Set when the object is selected.}}
			ha:auto { valtype=flag; desc={For lines and vias, indicates that these were created by the autorouter.}}
			ha:warn { valtype=flag; desc={For pins, vias, and pads, set to indicate a warning.}}
			ha:usetherm { valtype=flag; desc={Obsolete, indicates that pins/vias should be drawn with thermal fingers.}}
			ha:drc { valtype=flag; desc={Set for objects that fail DRC: flag like FOUND flag for DRC checking.}}
			ha:lock { valtype=flag; desc={Set for locked objects.}}
			ha:nonetlist { valtype=flag; desc={subcircuit is not on the netlist and should not interfere with the netlist }}
			ha:termname { valtype=flag; desc={when set the names of pins are shown.}}
			ha:floater { valtype=flag; desc={subc part can be moved after subc placing}}
			ha:pin { valtype=flag; desc={object is a pin (in an element)}}
			ha:via { valtype=flag; desc={object is a via}}
		}
	}

	ha:flags_pad {
		hide=1
		desc={flag bits of a pad}
		type=ha
		dot_group=1
		li:children {
			ha:found { valtype=flag; desc={If set, this object has been found by FindConnection()}}
			ha:hole { valtype=flag; desc={For pins and vias, this flag means that the pin or via is a hole without a copper annulus.}}
			ha:clearline { valtype=flag; desc={For lines and arcs, the line/arc will clear polygons instead of connecting to them.}}
			ha:selected { valtype=flag; desc={Set when the object is selected.}}
			ha:auto { valtype=flag; desc={For lines and vias, indicates that these were created by the autorouter.}}
			ha:warn { valtype=flag; desc={For pins, vias, and pads, set to indicate a warning.}}
			ha:usetherm { valtype=flag; desc={Obsolete, indicates that pins/vias should be drawn with thermal fingers.}}
			ha:drc { valtype=flag; desc={Set for objects that fail DRC: flag like FOUND flag for DRC checking.}}
			ha:lock { valtype=flag; desc={Set for locked objects.}}
			ha:nonetlist { valtype=flag; desc={subcircuit is not on the netlist and should not interfere with the netlist }}
			ha:termname { valtype=flag; desc={when set the names of pins are shown.}}
			ha:floater { valtype=flag; desc={subc part can be moved after subc placing}}
			ha:pin { valtype=flag; desc={object is a pin (in an element)}}
			ha:via { valtype=flag; desc={object is a via}}
		}
	}
} }
