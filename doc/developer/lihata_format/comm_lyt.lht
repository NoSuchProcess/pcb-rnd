ha:lht_tree_doc { ha:comm {

	ha:layer_mask {
		hide=1
		type=ha
		desc={layer type and location}
		dot_group=1
		li:children {
			ha:top           { valtype=flag; desc={location: top side}}
			ha:bottom        { valtype=flag; desc={location: bottom side}}
			ha:intern        { valtype=flag; desc={location: internal}}
			ha:logical       { valtype=flag; desc={location: logical (not in the actual stackup)}}
			ha:copper        { valtype=flag; desc={material: copper}}
			ha:silk          { valtype=flag; desc={material: silk}}
			ha:mask          { valtype=flag; desc={material: mask}}
			ha:paste         { valtype=flag; desc={material: paste}}
			ha:outline       { valtype=flag; desc={"material": router path for board outline; normally for the outer contour, sometimes for biggish inner cutouts as well) }}
			ha:mech          { valtype=flag; desc={"material": various mechanical fabbing instructions, e.g. slots; the purpose field provides more detail about the use }}
			ha:doc           { valtype=flag; desc={"material": documentation, either for the user and for pcb-rnd or both (the purpose field shoudl tell); e.g. assembly documentation for the user, keepout for the user and DRC }}
			ha:substrate     { valtype=flag; desc={material: substrate or insulator}}

#			ha:rat           { valtype=flag; desc={(virtual: rat lines)}}
#			ha:invis         { valtype=flag; desc={(virtual: invisible)}}
#			ha:assy          { valtype=flag; desc={(virtual: assembly drawing)}}
#			ha:fab           { valtype=flag; desc={(virtual: fab drawing)}}
#			ha:plateddrill   { valtype=flag; desc={(drills: plated)}}
#			ha:unplateddrill { valtype=flag; desc={(drills: unplated)}}
#			ha:cross-section { valtype=flag; desc={(virtual: cross section drawing)}}
#			ha:misc          { valtype=flag; desc={(virtual: virtual misc layer)}}
#			ha:virtual       { valtype=flag; desc={(if set, the layer is not a physical layer but a drawing or documentation)}}
		}
	}

	ha:combining {
		hide=1
		dot_group=1
		li:children {
			ha:sub    { valtype=flag; desc={draw in negative}}
			ha:auto   { valtype=flag; desc={padstacks draw their paste, mask and silk objects on the first layer (of matching type) that features the auto flag}}
		}
	}

}}
