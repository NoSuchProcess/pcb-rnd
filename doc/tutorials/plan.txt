=== basic ===

Milestone C:

- placing footprints from the lib [5]
	<chapter 1>: the library window
	- manual nav
	- placement
		- place copies from buffer
		- rotate (shift-f7, {b r r}, {b r l})
		- other side: tab
	- filter
		- TO12  <- prefix
		- 126   <- middle match (TO126)
		- [12]6 <- regex! (show TO126 and SOT363)
		- ^sot  <- regex, case insensitive
	- parametric
		- type in:
			- so(6)
			- so(6,500)
		- gui edit
			- row spacing 200 mil
			- line_thickness 0.1mm
		- show & edit edited params
		- place; edit; place -> once placed, a copy is made
	<chapter 2>: libraries, configuration
	- configuring own library
	- edakrill
		- {i c p}, wget@edakrill
		- maintenance re-scan
		- have to refresh manually in the lib window
		- search for sot23-5
	<chapter 3>: netlist
	- how this interferes with import
		- import sch with a few parts
		- arrange, reimport
		- place something, reimport -> gets removed
		- nonetlist (connector(1) for test pad, logo)

- drawing on any layer [3]
	- turning layers on-off
	- turning all layers on-off
	- drawing on any layer: silk, mask, paste, assembly
	- explain layer compositing:
		- layers of different color
		- positive and negative layers on silk
		- explain how the mask layer works
	- moving objects between layers
		- right click menu: single
		- {s l}
		- subc
	- one object is always on one layer, except for subcircuits and padstacks

- grid, snap, wireframe [3]
	TODO

- outline and cutouts [3]
	TODO

- export to fab [3]
	- cam export to jlc
		- explain gerber + excellon
		- explain file naming
	- export XY

Milestone D:

- remove and buffer basics [2]
	TODO
	(include mirror and arb. rotation)

- advanced buffer use [5]
	- save buffer content
	- save single footprint
	- save footprint lib
	- loading buffer content
	- loading footprint to buffer
		- that's really happening with the lib window
		- but also from the import menu
	- using multiple buffers
	- buffer survives board switch
	- explain buffer layer bindings

- connectivity [2]
	- {c r}
	- {c f}
	- shorts and mincut

- netlist window basics [3]
	TODO

- netlist window advanced [5]
	TODO

- advanced thermals [3]
	TODO



=== advanced ===
- layer compositing
- creating doc layers
- mechanical keepout layers
- doc layers: assy and custom
- fab layers
- subcircuit layer bindings
- footprint creation basics [5]
- TODO: extended objects....
