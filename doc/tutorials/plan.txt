=== basic ===

Milestone A:

- getting started [25]
	- normal workflow (diagram):
	- layer stackup
		- cd to project dir, start pcb-rnd from there (UNIX aspects)
		- show preferences cross sect
		- drag&drop remove intern layer groups
		- remove extra layers, keep one layer per group for now
		- decide that bottom is gnd, rename layers accordingly
		- mention sizes (but do not deal with it); defaults are good for all techs
	- sch import
		- sch-rnd
		- hint on other formats
		- mention stdlib footprints are used
		- zoom out for the footprints
		- terminology: subcircuit
		- look at the netlist
	- placement
		- manual placement for this tutorial
		- looking at sch
		- looking at rats nest, {c r}
		- drag&drop move: no need to select
		- grid basics
		- show rotate
		- show context menu move to the other side, show hotkey
		- show undo {u u}
	- routing
		- routing with lines on top layer, leave out gnd
			- hover over a pin for pin info/net
			- line refraction with shift
			- line refraction with '/' and menu (bottom status!)
			- routing styles (selection only)
		- via & sides
				- find a crossing show manual via placement + usig the other side
				- tab, shift tab, ctrl tab
				- bottom status
				- via terminology: padstack
		- polygon on the bottom side
		- thermals to connect (minimum thermals)
	- mention export will be handled in a different video

Milestone B:

- advanced routing with lines [3]
	- line refraction:
		- 90 degree
		- all-direction
	- rubber band modes
	- route radius
	- show routing style configuration (no padstack yet)

- per board and per subc padstack proto lib [5]
	TODO (save load too!)

- advanced routing: arcs and propedit on traces [3]
	- arcs
		- same trace width
		- editing arc angles graphically
	- draw a line, an arc and a via and a rectangle around them
	- open propedit on the line from context menu, show scope
	- explain thickness and clearance
	- close propedit
	- select line, arc, via
	- use {p e} to open propedit, show scope
	- show stats
	- change clearance and trace thickness
	- refer to sch-rnd propedit video

- poly [5]
	- drawing rectangles
	- drawing arbitrary polygons
		- all-direction line
		- hotkey for close
	- drawing holes
	- explain that hole is part of the polygon object
	- clearances in polygons
		- normal object clearance
		- as-drawn and clipped poly (turn on frame)
		- poly cut into multiple islands
	- editing existing polygons
		- grab a corner
		- ortho-move (shift or ctrl?)
		- show invisible corners with as-drawn frame and hover
		- insert
	- explain there are no pours or planes
	- show poly clipping out of existence

- text [3]
	TODO

- select [3]

Milestone C:

- placing footprints from the lib [5]
	- manual nav
	- placement
	- filter
	- parametric
		- type in
		- gui edit
	- edakrill
	- configuring own library
	- how this interferes with import
		- nonetlist (connector(1) for test pad, logo)

- grid, snap, wireframe [3]
	TODO

- drawing on any layer [3]
	- turning layers on-off
	- turning all layers on-off
	- drawing on any layer
	- explain negative layer
	- moving objects between layers
	- one object is always on one layer, except for subcircuits and padstacks

- outline and cutouts [3]
	TODO

- export to fab [3]
	- cam export to jlc
		- explain gerber + excellon
		- explain file naming
	- export XY

Milestone D:

- remove and buffer basics [2]
	TODO
	(include mirror and arb. rotation)

- advanced buffer use [5]
	- save buffer content
	- save single footprint
	- save footprint lib
	- loading buffer content
	- loading footprint to buffer
		- that's really happening with the lib window
		- but also from the import menu
	- using multiple buffers
	- buffer survives board switch
	- explain buffer layer bindings

- connectivity [2]
	- {c r}
	- {c f}
	- shorts and mincut

- netlist window basics [3]
	TODO

- netlist window advanced [5]
	TODO

- advanced thermals [3]
	TODO



=== advanced ===
- layer compositing
- creating doc layers
- mechanical keepout layers
- doc layers: assy and custom
- fab layers
- subcircuit layer bindings
- footprint creation basics [5]
- TODO: extended objects....
